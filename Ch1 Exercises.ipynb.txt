{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2b93f201",
   "metadata": {},
   "source": [
    "# Chapter 1 Ex.\n",
    "Problems 1, 3, 4"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30e5b890",
   "metadata": {},
   "source": [
    "## Ex. 1\n",
    "\n",
    "The textbook asks to use the print function, I also tried a few other inputs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ac665bf2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This is a test of the Python interpreter.\n"
     ]
    }
   ],
   "source": [
    "print('This is a test of the Python interpreter.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dc097c32",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This should work:  16\n"
     ]
    }
   ],
   "source": [
    "print('This should work: ', 8 + 8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4c16f54a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This should work:  64\n"
     ]
    }
   ],
   "source": [
    "print('This should work: ',8 * 8)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c26d9d72",
   "metadata": {},
   "source": [
    "## Ex. 3\n",
    "\n",
    "The textbook asks to change these decimal numbers to binary."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d78ef74b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The binary number for 11 is 1011\n"
     ]
    }
   ],
   "source": [
    "print('The binary number for 11 is 1011')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc9b5115",
   "metadata": {},
   "source": [
    "Reasoning: The far right slot is equal to 1, the next to the left is equal to 2, the next 0 is equal to 0, and finally the furthest left slot is equal to 8, ultimately equalling 11."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b2cfa2f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The binary number for 65 is 1000001\n"
     ]
    }
   ],
   "source": [
    "print('The binary number for 65 is 1000001')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb85028f",
   "metadata": {},
   "source": [
    "Reasoning: The 7th slot is equal to 64, and the 1st slot is equal to 1, ending up with 64+1=65"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ed5519a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The binary number for 100 is 11000100\n"
     ]
    }
   ],
   "source": [
    "print('The binary number for 100 is 1100100')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6692caf7",
   "metadata": {},
   "source": [
    "Reasoning: The 7th slot is equal to 64, the 6th slot is equal to 32, and finally the 3 slot is equal to 4, ending up with 64+32+4=100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fe171330",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The binary number for 255 is 11111111\n"
     ]
    }
   ],
   "source": [
    "print('The binary number for 255 is 11111111')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89e52bcb",
   "metadata": {},
   "source": [
    "Reasoning: All the numbers added up equal 255"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9c951a7",
   "metadata": {},
   "source": [
    "## Ex. 4\n",
    "\n",
    "The textbook asks to change these binary numbers to decimal."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "c543c57a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The decimal number for 1101 is 13\n"
     ]
    }
   ],
   "source": [
    "print('The decimal number for 1101 is 13')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d4fb10b",
   "metadata": {},
   "source": [
    "Reasoning: Slot 1 equals 1, slot 3 equals 4, and finally slot 4 equals 8. Ending up with 13"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0baa21a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The decimal number for 1000 is 8\n"
     ]
    }
   ],
   "source": [
    "print('The decimal number for 1000 is 8')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f21b8a1",
   "metadata": {},
   "source": [
    "Reasoning: Slot 4 is equal to 8, ending up with 8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a2b26778",
   "metadata": {},
   "outputs": [],
   "source": [
    "print('The decimal number for 101011 is 43')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78b3167f",
   "metadata": {},
   "source": [
    "Reasoning: Slot 1 is equal to 1, slot 2 is equal to 2, slot 4 is equal to 8, slot 6 is equal to 32. Ending up with 43"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
